akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
akka.persistence.journal.leveldb.dir = "target/rtjvm/journal"
akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
akka.persistence.snapshot-store.local.dir = "target/rtjvm/snapshots"

localStore {
  akka.persistence.journal.plugin = "akka.persistence.journal.leveldb"
  akka.persistence.journal.leveldb.dir = "target/localStore/journal"
  akka.persistence.snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  akka.persistence.snapshot-store.local.dir = "target/localStore/snapshots"

  akka.persistence.journal.leveldb.compaction-intervals {
    simple-persistence-actor = 1000
    "*" = 5000
  }
}

psqlStore {
  akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"
  akka.persistence.journal.plugin = "jdbc-journal"

  akka-persistence-jdbc {
    shared-databases {
      slick {
        profile = "slick.jdbc.PostgresProfile$"
        db {
          numThreads = 10
          driver = "org.postgresql.Driver"
          url = "jdbc:postgresql://localhost:5432/rtjvm"
          user = "docker"
          password = "docker"
        }
      }
    }
  }

  jdbc-journal {
    use-shared-db = "slick"
  }

  jdbc-snapshot-store {
    use-shared-db = "slick"
  }

}

cassandraStore {
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
  akka.persistence.journal.plugin = "cassandra-journal"

  // default values
}

customSerializerDemo {
  akka.persistence.snapshot-store.plugin = "cassandra-snapshot-store"
  akka.persistence.journal.plugin = "cassandra-journal"

  akka.actor {
    serializers {
      java = "akka.serialization.JavaSerializer"
      rtjvm = "part3_stores_serialization.UserRegistrationSerializer"
    }

    serialization-bindings {
      "part3_stores_serialization.UserRegistered" = rtjvm
      // java serializer is used by default
    }

  }
}